(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{292:function(t,e,n){"use strict";n.r(e);var a=n(1),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("给博客添加一个相册页面，以展示自己拍摄的一些照片  (≖ᴗ≖)✧\n")]),t._v(" "),n("h1",{attrs:{id:"config-yml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#config-yml"}},[t._v("#")]),t._v(" _config.yml")]),t._v(" "),n("p",[t._v("首先新建"),n("code",[t._v("hexo new page photos")]),t._v("相册页面，将会在"),n("code",[t._v("source/")]),t._v("下创建"),n("code",[t._v("photos/index.md")]),t._v("，在其中添加"),n("code",[t._v("type: photos")])]),t._v(" "),n("p",[t._v("之后在主题"),n("code",[t._v("_config.yml")]),t._v("文件中对应位置"),n("code",[t._v("menu")]),t._v("里添加"),n("code",[t._v("Photos: /photos/ || image")]),t._v(" ，这样生成后就能在页面的对应页面选项中有该相册Tab。")]),t._v(" "),n("h1",{attrs:{id:"json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[t._v("#")]),t._v(" json")]),t._v(" "),n("p",[t._v("在博客根目录下新建"),n("code",[t._v("uploadPhotos")]),t._v("文件夹，里面将会存放照片以及相关js文件。")]),t._v(" "),n("p",[t._v("新建"),n("code",[t._v("uploadPhotos/Images/")]),t._v("文件夹，然后在其中存放需要在页面中展示的照片集（后续需将该文件夹上传至GitHub相册库，若没有对应库，可新建，并上传图片）。")]),t._v(" "),n("p",[t._v("新建"),n("code",[t._v("uploadPhotos/tool.js")]),t._v("文件，里面内容如下，主要功能是访问照片文件夹，获取每张照片的size和name，并生成对应的json文件：")]),t._v(" "),n("p",[t._v("命令："),n("code",[t._v("Git Bash")]),t._v("中键入 "),n("code",[t._v("node tool.js")]),t._v("生成json"),n("br"),t._v("\n注：若出现"),n("code",[t._v("Error: Cannot find module 'image-size'")]),t._v("问题，请在"),n("code",[t._v("Git Bash")]),t._v("中键入对应命令"),n("code",[t._v("npm install image-size")]),t._v("进行安装。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('"use strict";\n    const fs = require("fs");\n    const sizeOf = require(\'image-size\');\n    const path = "Images";\n    const output = "../themes/next/source/photos/photoslist.json";\n    var dimensions;\n\n    fs.readdir(path, function (err, files) {\n        if (err) {\n            return;\n        }\n        let arr = [];\n        (function iterator(index) {\n            if (index == files.length) {\n                fs.writeFile(output, JSON.stringify(arr, null, "\\t"));\n                return;\n            }\n\n            fs.stat(path + "/" + files[index], function (err, stats) {\n                if (err) {\n                    return;\n                }\n                if (stats.isFile()) {\n                    dimensions = sizeOf(path + "/" + files[index]);\n                    console.log(dimensions.width, dimensions.height);\n                    arr.push(dimensions.width + \'.\' + dimensions.height + \' \' + files[index]);\n                }\n                iterator(index + 1);\n            })\n        }(0));\n    });\n\n')])])]),n("p",[t._v("json文件样例如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('[\n\t"4032.3024 IMG_0391.JPG",\n\t"12500.3874 IMG_0404.JPG",\n\t"4032.3024 IMG_0416.JPG",\n\t"4032.3024 IMG_0424.JPG",\n\t"3024.4032 IMG_0427.JPG",\n\t"4032.3024 IMG_0429.JPG",\n\t"4032.3024 IMG_0430.JPG"\n]\n')])])]),n("h1",{attrs:{id:"photo-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#photo-js"}},[t._v("#")]),t._v(" photo.js")]),t._v(" "),n("p",[t._v("新建"),n("code",[t._v("themes/next/source/photos/photo.js")]),t._v("文件，其中"),n("code",[t._v("photos")]),t._v("文件夹是自己创建的。")]),t._v(" "),n("p",[n("code",[t._v("photos.js")]),t._v("内容如下，主要功能是访问json文件内容，遍历每行数据，并在页面对应位置上放置代码，展示图片（其中图片链接为自个GitHub相册库中图片的链接）：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("photo ={\n    page: 1,\n    offset: 20,\n    init: function () {\n        var that = this;\n        $.getJSON(\"/photos/photoslist.json\", function (data) {\n            that.render(that.page, data);\n            //that.scroll(data);\n        });\n    },\n\n    render: function (page, data) {\n        var begin = (page - 1) * this.offset;\n        var end = page * this.offset;\n        if (begin >= data.length) return;\n        var html, imgNameWithPattern, imgName, imageSize, imageX, imageY, li = \"\";\n        for (var i = begin; i < end && i < data.length; i++) {\n           imgNameWithPattern = data[i].split(' ')[1];\n           imgName = imgNameWithPattern.split('.')[0]\n           imageSize = data[i].split(' ')[0];\n           imageX = imageSize.split('.')[0];\n           imageY = imageSize.split('.')[1];\n            li += '<div class=\"card\" style=\"width:330px\">' +\n                    '<div class=\"ImageInCard\" style=\"height:'+ 330 * imageY / imageX + 'px\">' +\n                      '<a data-fancybox=\"gallery\" href=\"https://github.com/asdfv1929/BlogPhotos/blob/master/Images/' + imgNameWithPattern + '?raw=true\" data-caption=\"' + imgName + '\">' +\n                        '<img src=\"https://github.com/asdfv1929/BlogPhotos/blob/master/Images/' + imgNameWithPattern + '?raw=true\"/>' +\n                      '</a>' +\n                    '</div>' +\n                    // '<div class=\"TextInCard\">' + imgName + '</div>' +\n                  '</div>'\n\n        }\n\n        $(\".ImageGrid\").append(li);\n        $(\".ImageGrid\").lazyload();\n        this.minigrid();\n    },\n\n    minigrid: function() {\n        var grid = new Minigrid({\n            container: '.ImageGrid',\n            item: '.card',\n            gutter: 12\n        });\n        grid.mount();\n        $(window).resize(function() {\n           grid.mount();\n        });\n    }\n\n}\n\nphoto.init();\n")])])]),n("h1",{attrs:{id:"photos-swig"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#photos-swig"}},[t._v("#")]),t._v(" photos.swig")]),t._v(" "),n("p",[t._v("新建"),n("code",[t._v("themes/next/layout/photos.swig")]),t._v("文件，其内容模仿"),n("code",[t._v("tag.swig")]),t._v("中内容（直接复制粘贴），然后将其中的"),n("code",[t._v("tag")]),t._v("全部替换为"),n("code",[t._v("photos")]),t._v("。")]),t._v(" "),n("h1",{attrs:{id:"photos-css"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#photos-css"}},[t._v("#")]),t._v(" photos.css")]),t._v(" "),n("p",[t._v("新建"),n("code",[t._v("themes/next/source/photos/photos.css")]),t._v("样式文件，内容如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(".ImageGrid {width: 100%;max-width: 1040px;margin: 0 auto; text-align: center;}\n.card {overflow: hidden;transition: .3s ease-in-out; border-radius: 8px; background-color: #ddd;}\n.ImageInCard {}\n.ImageInCard img {padding: 0 0 0 0;}\n.TextInCard {line-height: 54px; background-color: #ffffff; font-size: 24px;}\n")])])]),n("h1",{attrs:{id:"page-swig"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#page-swig"}},[t._v("#")]),t._v(" page.swig")]),t._v(" "),n("p",[t._v("修改"),n("code",[t._v("themes/next/layout/page.swig")]),t._v("文件，添加下面代码中中间"),n("code",[t._v('page.type === "photos"')]),t._v("那两行。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("{% block title %}{#\n#}{% set page_title_suffix = ' | ' + config.title %}{#\n\n#}{% if page.type === \"categories\" and not page.title %}{#\n  #}{{ __('title.category') + page_title_suffix }}{#\n#}{% elif page.type === \"tags\" and not page.title %}{#\n  #}{{ __('title.tag') + page_title_suffix }}{#\n\n\n#}{% elif page.type === \"photos\" and not page.title %}{#\n  #}{{ __('title.photos') + page_title_suffix }}{#\n\n\n#}{% else %}{#\n  #}{{ page.title + page_title_suffix }}{#\n#}{% endif %}{#\n#}{% endblock %}\n")])])]),n("p",[t._v("依旧是该文件中，添加"),n("code",[t._v('page.type === "photos"')]),t._v("那两行：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('{% elif page.type === \'categories\' %}\n  <div class="category-all-page">\n    <div class="category-all-title">\n        {{ _p(\'counter.categories\', site.categories.length) }}\n    </div>\n    <div class="category-all">\n      {{ list_categories() }}\n    </div>\n  </div>\n\n\n{% elif page.type === \'photos\' %}\n    <div class="ImageGrid"></div>\n\n\n{% else %}\n  {{ page.content }}\n{% endif %}\n')])])]),n("h1",{attrs:{id:"config-yml-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#config-yml-2"}},[t._v("#")]),t._v(" _config.yml")]),t._v(" "),n("p",[t._v("在主题配置文件"),n("code",[t._v("_config.yml")]),t._v("中相关部分，进行相关的配置（lazyload、fancybox）："),n("br"),t._v("\n首先确保"),n("code",[t._v("_config.yml")]),t._v("中"),n("code",[t._v("Fancybox")]),t._v("部分是否开启：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# Fancybox\nfancybox: true\n")])])]),n("p",[t._v("之后亦在该文件"),n("code",[t._v("_config.yml")]),t._v("的末尾部分，找到")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("vendors:\n  # Internal path prefix. Please do not edit it.\n  _internal: lib\n")])])]),n("p",[t._v("在这个"),n("code",[t._v("vendors")]),t._v("的选项下面，有对应的"),n("code",[t._v("fancybox")]),t._v("、"),n("code",[t._v("lazyload")]),t._v("配置区域，填写相应的URL即可：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("vendors:\n  # Internal path prefix. Please do not edit it.\n  _internal: lib\n\n  # Internal version: 2.1.3\n  jquery:\n\n  # Internal version: 2.1.5\n  # See: http://fancyapps.com/fancybox/\n  fancybox: https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.3.5/jquery.fancybox.min.js\n\n  fancybox_css: https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.3.5/jquery.fancybox.min.css\n\n  # Internal version: 1.0.6\n  # See: https://github.com/ftlabs/fastclick\n  fastclick:\n\n  # Internal version: 1.9.7\n  # See: https://github.com/tuupola/jquery_lazyload\n  lazyload: https://cdn.jsdelivr.net/npm/lazyload@2.0.0-beta.2/lazyload.js\n")])])]),n("p",[t._v("之后在"),n("code",[t._v("_layout.swig")]),t._v("中相关信息配置：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<script type="text/javascript" src="https://unpkg.com/minigrid@3.1.1/dist/minigrid.min.js"><\/script>\n\n<link rel="stylesheet" href="/photos/photos.css">\n<script type="text/javascript" src="/photos/photo.js"><\/script>\n')])])]),n("p",[t._v("重新生成访问，查看成果。")]),t._v(" "),n("h1",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("以上就是添加相册功能大概流程，因为步骤比较多，且是通过后期回忆步骤进行记录，所以可能存在些许问题，还请原谅，并请把出现的问题在本文下面的评论中点出，我会进行修改。")]),t._v(" "),n("p",[t._v("后续的实现：")]),t._v(" "),n("ul",[n("li",[t._v("将照片上传至GitHub相册库时，由于照片分辨率较高，其都达到了两三M以上，上传速度较慢，导致上传进度缓慢。后期想通过代码将照片进行压缩后再上传至相册库。")]),t._v(" "),n("li",[t._v("相册展示整个操作流程为：先上传照片到git库，再生成json文件，之后便是正常的clean、g、d，后期想把压缩、上传照片和生成json文件整合到一起。")]),t._v(" "),n("li",[t._v("目前的照片展示都是所有照片一整块放一起进行瀑布流显示，后期想将照片根据其旅游场景或类别、时间不同进行分类至对应文件夹，并根据类别或时间线显式展示出不同文件夹下的照片。")])]),t._v(" "),n("p",[t._v("参考链接：\n"),n("a",{attrs:{href:"https://www.cnblogs.com/xljzlw/p/5137622.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("hexo主题中添加相册功能"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"https://fchange.github.io/2018/02/18/%E5%A6%82%E4%BD%95%E5%9C%A8Hexo%E4%B8%AD%E5%AE%9E%E7%8E%B0%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何在Hexo中实现自适应响应式相册功能"),n("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);